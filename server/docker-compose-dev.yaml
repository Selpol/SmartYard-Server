services:
  nginx:
    image: nginx:1.25-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "9001:9001"
    volumes:
      - ./docker/nginx/dev-nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - php
    networks:
      backend:
      frontend:
  database:
    image: postgres:15-alpine
    container_name: database
    volumes:
      - ./docker/data/database:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - TZ=Europe/Moscow
    networks:
      backend:
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USER=${REDIS_USER}
      - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
    command: >
      sh -c '
        mkdir -p /usr/local/etc/redis &&
        echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
        echo "requirepass $REDIS_PASSWORD" >> /usr/local/etc/redis/redis.conf &&
        echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
        echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
        echo "user default off nopass nocommands" > /usr/local/etc/redis/users.acl &&
        echo "user $REDIS_USER on >$REDIS_USER_PASSWORD ~* +@all" >> /usr/local/etc/redis/users.acl &&
        redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
      '
    networks:
      backend:
  clickhouse:
    image: bitnami/clickhouse:23.8.15
    ports:
      - "8123:8123"
    environment:
      - CLICKHOUSE_ADMIN_PASSWORD=${CLICKHOUSE_PASSWORD}
    networks:
      backend:
  amqp:
    image: heidiks/rabbitmq-delayed-message-exchange:3.10.2-management
    container_name: amqp
    environment:
      - RABBITMQ_DEFAULT_USER=${AMQP_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${AMQP_PASSWORD}
    networks:
      backend:
  mqtt:
    image: iegomez/mosquitto-go-auth:2.0.0-mosquitto_2.0.14
    container_name: mqtt
    volumes:
      - ./docker/mosquitto/mosquitto.conf:/etc/mosquitto/mosquitto.conf
      - ./docker/mosquitto/conf.d:/mosquitto/conf.d
    networks:
      backend:
      frontend:
  php:
    build:
      context: .
      dockerfile: Dev.Dockerfile
      args:
        TZ: Europe/Moscow
        COMPOSER_AUTH: ${COMPOSER_AUTH}
    container_name: php
    volumes:
      - ./:/srv/app
      - ./docker/data/log:/srv/app/var/log
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AMQP_HOST=amqp
      - AMQP_PORT=5672
      - MQTT_HOST=mqtt
      - MQTT_PORT=1883
      - CLICKHOUSE_ENDPOINT=http://clickhouse:8123?database=default
    depends_on:
      - database
      - redis
      - amqp
      - mqtt
    networks:
      backend:

networks:
  frontend:
  backend: